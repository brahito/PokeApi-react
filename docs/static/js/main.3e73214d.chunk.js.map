{"version":3,"sources":["images/logo.png","components/NavBar.js","helpers/pokeCardColor.js","helpers/getPokemons.js","helpers/pokeColors.js","components/CardContent.js","components/Card.js","hooks/useFetchPoke.js","PokeApi.js","index.js"],"names":["NavBar","setSearch","useState","inputValue","setInputValue","className","src","img","alt","onClick","onSubmit","e","preventDefault","trim","length","a","type","value","onChange","target","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","getAllPokemonData","fetch","resp","json","data","getPokemonData","dir","typeColors","ghost","pyschic","steel","dark","ice","CardContent","id","name","sprites","types","console","log","style","backgroundColor","cardColor","other","front_default","toString","padStart","map","pokemonType","Card","loading","state","setState","useEffect","response","loadingPokemon","results","fetchData","Promise","all","pokemon","url","pokemonRecord","pokemonData","useFetchPoke","pokemones","pok","PokeApi","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e73214d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6e223bd2.png\";","import React, { useState } from 'react'\r\nimport img from '../images/logo.png'\r\nimport PropTypes from 'prop-types'\r\nexport const NavBar = ({setSearch}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const reset = () =>{\r\n\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setSearch( a => [ inputValue, ...a]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nav\">\r\n                <h3>PokeApi App</h3>\r\n                <img src={img} alt=\"Logo de pokemon\"/>\r\n                <button onClick={reset}>Reset</button>\r\n            </div>\r\n            <div className=\"search\">\r\n                <h3>Buscar Pokemon:</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange = {handleInputChange}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// NavBar.propTypes = {\r\n//     setSearch: PropTypes.func.isRequired\r\n// }","const colors = {\r\n\tfire: '#FDDFDF',\r\n\tgrass: '#DEFDE0',\r\n\telectric: '#FCF7DE',\r\n\twater: '#DEF3FD',\r\n\tground: '#f4e7da',\r\n\trock: '#d5d5d4',\r\n\tfairy: '#fceaff',\r\n\tpoison: '#98d7a5',\r\n\tbug: '#f8d5a3',\r\n\tdragon: '#97b3e6',\r\n\tpsychic: '#eaeda1',\r\n\tflying: '#F5F5F5',\r\n\tfighting: '#E6E0D4',\r\n\tnormal: '#cccccc'\r\n};\r\nexport default colors;","\r\nexport const getAllPokemonData = async() => {\r\n    \r\n    const dir = `https://pokeapi.co/api/v2/pokemon?limit=150`;\r\n    const resp = await fetch( dir );\r\n    const data = await resp.json();\r\n    \r\n    return await data;\r\n}\r\n\r\nexport const getPokemonData = async (dir) => {\r\n\r\n    const resp = await fetch( dir );\r\n    const data = await resp.json();\r\n    \r\n    return await data;\r\n}\r\n\r\n","\r\nconst typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\nexport default typeColors;","import React from 'react'\r\nimport pokemonType from '../helpers/pokeColors';\r\nimport cardColor from '../helpers/pokeCardColor';\r\n\r\n\r\nexport const CardContent = ({id, name, sprites, types}) => {\r\n    console.log(types);\r\n    return (\r\n        \r\n        <div className=\"card\" style={{backgroundColor: cardColor[types[0].type.name]}}>\r\n            <div className=\"card_img\">\r\n                <img src ={sprites.other['official-artwork'].front_default} alt=\"\"/>\r\n            </div>\r\n            <div className=\"id\">\r\n                #{id\r\n\t\t\t\t\t.toString()\r\n\t\t\t\t\t.padStart(3, '0')\r\n                }\r\n            </div>\r\n\r\n            <div className=\"card_name\">\r\n                {name}\r\n            </div>\r\n            <div className=\"card_types\" >\r\n                {types.map(type =>{\r\n                    return(\r\n                        <div \r\n                            className=\"card_type\" \r\n                            style={{backgroundColor: pokemonType[type.type.name]}}\r\n                        >\r\n                            {type.type.name}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport cardColor from '../helpers/pokeCardColor';\r\nimport { useFetchPoke } from '../hooks/useFetchPoke';\r\nimport { CardContent } from './CardContent';\r\n\r\nexport const Card = () => {\r\n   \r\n    const {data: pokemones, loading} = useFetchPoke();\r\n\r\n    return (\r\n        \r\n        <div className=\"general-container\">\r\n            \r\n        { loading ? <h1>Loading...</h1> :(        \r\n            <div className=\"grid-container\">\r\n                {\r\n                    pokemones.map( pok =>(\r\n                        <CardContent\r\n                        key = {pok.id}\r\n                        {...pok}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        )}\r\n        </div>\r\n           \r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport {getPokemonData, getAllPokemonData} from '../helpers/getPokemons'\r\n\r\nexport const useFetchPoke = () => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            let response = await getAllPokemonData();\r\n            await loadingPokemon(response.results);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const loadingPokemon = async(data) =>{\r\n        \r\n        let pokemonData = await Promise.all(data.map(async pokemon =>{\r\n            let pokemonRecord = await getPokemonData(pokemon.url);\r\n            return pokemonRecord\r\n        }))\r\n        setState({\r\n            data: pokemonData,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    return state;\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavBar } from './components/NavBar'\r\nimport {Card} from './components/Card.js'\r\n\r\n\r\nexport const PokeApi = () => {\r\n    \r\n    const [search, setSearch] = useState('')\r\n\r\n    return (\r\n        <>\r\n\r\n            <NavBar setSearch={setSearch}/>\r\n            \r\n            <div>\r\n            <div className=\"btn\">\r\n                <button >Prev</button>\r\n                <button >Next</button>\r\n            </div>\r\n                <Card />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {PokeApi} from './PokeApi';\n\nimport './index.css';\n\nReactDOM.render(\n  <PokeApi />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}